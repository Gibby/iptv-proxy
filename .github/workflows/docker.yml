name: Docker Build and Publish

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta ghcr
        id: meta-ghcr
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=edge,branch=main
      -
        name: Docker meta DockerHub
        id: meta-dockerhub
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=edge,branch=main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push ghcr
        uses: docker/build-push-action@v4
        with:
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          context: .
          # Due to build time, only building the one currently needed.
          # If needed, we can add more platforms when requested.
          platforms: linux/amd64,linux/arm64
          # Do not push pull requests
          #push: ${{ github.event_name != 'pull_request' }}
          # Push pull requests so they can be tested
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
      -
        name: Build and push DockerHub
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request'
        with:
          context: .
          # Due to build time, only building the one currently needed.
          # If needed, we can add more platforms when requested.
          platforms: linux/amd64,linux/arm64
          # Do not push pull requests
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-dockerhub.outputs.labels }}
      -
        name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        if: github.event_name != 'pull_request'
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}
        with:
          destination_container_repo: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          provider: dockerhub
          short_description: 'Iptv-Proxy is a project to proxyfie an m3u file and to proxyfie an Xtream iptv service (client API).'
          readme_file: 'README.md'
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --skip-sign
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
